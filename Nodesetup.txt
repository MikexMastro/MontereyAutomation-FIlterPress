' Program to map Trio IO In CanOpen mode' Controller: MC405' node 1, P318 Digital Input' Mapped to IN(16)-IN(31)' node 2, P317 Digital Output' Mapped to OP(32)-OP(47)' node 3, P319 Digital IO' Mapped to IN(48)-IN(63) / OP(48)-OP(63)' node 4, P326 Analogue IO' Mapped to AIN(0)-AIN(7) / AOUT(0)-AOUT(3)' node 5, P326 Analogue IO' Mapped to AIN(8)-AIN(15) / AOUT(4)-AOUT(7)' node 6, P327 Relay Output' Mapped to OP(64)-OP(31)' This program needs to be run once on each power up.can_port=-1node_a=1node_b=2node_c=3node_d=4node_e=5node_f=6CAN(can_port,24,0) ' turn off SYNCCANIO_ENABLE=0IFCANIO_ADDRESS<>42THENCANIO_ADDRESS=42ENDIF' baudratebaud1m=0: baud500k=1: baud250k=2: baud125k=3CAN(-1,2,baud500k)' allocate CAN buffer #1 for NMTnmtbuf=1' allocate CAN buffer #2 for SYNCsyncbuf=2' allocate CAN buffers 3 and 4 for SDOtxb=3rxb=4CAN(-1,5,nmtbuf,0,2,1)' Buffer 15 = NMTCAN(-1,7,nmtbuf,128,0)' Set the modules to "Pre-operational"
Name:GDCat BASICPage 9of 14'===========================================================================' Set up the remote Nodes'===========================================================================' first digital node P318node=node_ainbuff=10io_base=16pdo_type=255' send on change of stateGOSUBset_p318_pdo' setup the Trio CAN buffers and mapGOSUBget_node_info' just for display, this has no purpose in the setup.GOSUBinit_dig_node'---------------------------------------------------------------------------' 2nd digital node P317node=node_boutbuff=11io_base=32GOSUBset_p317_pdo' setup the Trio CAN buffers and mapGOSUBget_node_info' just for display, this has no purpose in the setup.'---------------------------------------------------------------------------' Digital IO node P319node=node_cinbuff=12outbuff=13io_base=48pdo_type=255' send on change of stateGOSUBset_p319_pdoGOSUBget_node_info' just for display, this has no purpose in the setup.GOSUBinit_dig_node'---------------------------------------------------------------------------' 1st analogue node P326node=node_dinbuffa=20inbuffb=21outbuff=22ain_base=0aout_base=0path=3' route to AIN/AOUTpdo_type=5' send every 5th syncGOSUBset_analogue_trio_pdoGOSUBget_node_info' just for display, this has no purpose in the setup.GOSUBinit_analogue_node'---------------------------------------------------------------------------' 2nd analogue node P326node=node_einbuffa=23inbuffb=24outbuff=25ain_base=8aout_base=4path=3' route to AIN/AOUTpdo_type=8' send every 8th sync
Name:GDCat BASICPage 10of 14GOSUBset_analogue_trio_pdoGOSUBget_node_info' just for display, this has no purpose in the setup.GOSUBinit_analogue_node'---------------------------------------------------------------------------' Relay output node P327node=node_foutbuff=14io_base=64GOSUBset_p327_pdoGOSUBget_node_info' just for display, this has no purpose in the setup.'===========================================================================' Set up the output rate and start the CanOpen'===========================================================================CANOPEN_OP_RATE=10'refresh output values every 10 msCAN(-1,5,syncbuf,128,0,1)' Buffer 4 = SYNC' Syntax for start SYNC telegram: ' CAN(-1,24,1,SYNC message buffer, SYNC period IN ms)CAN(-1,24,1,syncbuf,2) ' send a sync telegram every 2 msecsCAN(-1,7,nmtbuf,1,0) ' Set the modules to run stateCANIO_ENABLE=1PRINT"Program finished"STOP'######################################################' Subroutines'######################################################'######################################################' These routines allocates the PDO buffers in the MC' and set the cob-ids.' They also map the PDOs to the required IO points.'######################################################set_p317_pdo:PRINT"Set Digital IO map for node ";node[0];" IO_base ";io_base[0]CAN(can_port,5,outbuff,$200+node,2,1) 'Tx 1CAN(can_port,23,outbuff,0,0,2,0,io_base+0,1,2) 'Tx 1 Map 0 2 bytes to OPRETURNset_p318_pdo:PRINT"Set Digital IO map for node ";node[0];" IO_base ";io_base[0]CAN(can_port,5,inbuff,$180+node,2,0) 'Rx 1CAN(can_port,23,inbuff,0,0,2,0,io_base+0,0,2) 'Rx 1 Map 0, 2 bytes to INRETURNset_p319_pdo:PRINT"Set Digital IO map for node ";node[0];" IO_base ";io_base[0]CAN(can_port,5,inbuff,$180+node,2,0) 'Rx 1CAN(can_port,5,outbuff,$200+node,2,1) 'Tx 1CAN(can_port,23,inbuff,0,0,2,0,io_base+0,0,2) 'Rx 1 Map 0, 2 bytes to IN
Name:GDCat BASICPage 11of 14CAN(can_port,23,outbuff,0,0,2,0,io_base+0,1,2) 'Tx 1 Map 0 2 bytes to OPRETURNset_p327_pdo:PRINT"Set Digital IO map for node ";node[0];" IO_base ";io_base[0]CAN(can_port,5,outbuff,$200+node,2,1) 'Tx 1CAN(can_port,23,outbuff,0,0,1,0,io_base+0,1,2) 'Tx 1 Map 0 1 byte to OPRETURN'######################################################' This routine allocates the PDO buffers in the MC and sets the COB-IDs' It also maps the PDOs to the required IO points. (suitable for P326)'######################################################set_analogue_trio_pdo:PRINT"Set Analogue IO map for node ";node[0];" Ain_base ";ain_base[0]CAN(-1,5,inbuffa,$280+node,8,0)'Rx 1CAN(-1,5,inbuffb,$380+node,8,0) 'Rx 1bCAN(-1,5,outbuff,$300+node,8,1) 'Tx 1' Set up the PDO to VR map'CAN(slot, 23, buffer#, map#, byte_os, byte_len, order, index, dirâ€™n, path)CAN(-1,23,inbuffa,0,0,2,0,ain_base+0,0,path) 'Rx pdo 1 Map 0CAN(-1,23,inbuffa,1,2,2,0,ain_base+1,0,path) 'Rx 1 Map 1CAN(-1,23,inbuffa,2,4,2,0,ain_base+2,0,path) 'Rx 1 Map 2CAN(-1,23,inbuffa,3,6,2,0,ain_base+3,0,path) 'Rx 1 Map 3CAN(-1,23,inbuffb,0,0,2,0,ain_base+4,0,path) 'Rx pdo 2 Map 0CAN(-1,23,inbuffb,1,2,2,0,ain_base+5,0,path) 'Rx 2 Map 1CAN(-1,23,inbuffb,2,4,2,0,ain_base+6,0,path) 'Rx 2 Map 2CAN(-1,23,inbuffb,3,6,2,0,ain_base+7,0,path) 'Rx 2 Map 3CAN(-1,23,outbuff,0,0,2,0,aout_base+0,1,path) 'Tx pdo 1 Map 0CAN(-1,23,outbuff,1,2,2,0,aout_base+1,1,path) 'Tx 1 Map 1CAN(-1,23,outbuff,2,4,2,0,aout_base+2,1,path) 'Tx 1 Map 2CAN(-1,23,outbuff,3,6,2,0,aout_base+3,1,path) 'Tx 1 Map 3RETURN'######################################################' Set up the PDO map and types in theremote slave' (suitable for P326)'######################################################init_analogue_node:'  IF product_code<>326 THEN'    PRINT "Not an Analogue IO device"'    STOP'  ENDIF'---------------------------------------------' Set up PDO1 mapping for OUTPUTs:' Uses the default mapping, so no SDO writes needed.'  0x1401:2 = 255'  0x1401:2 = 255' pre-set Output PDO mapping (rx PDO1):'  0x1601:0 = 4'  0x1601:1 = 64110110'  0x1601:2 = 64110210'  0x1601:3 = 64110310'  0x1601:4 = 64110410'---------------------------------------------' Set up PDO1 and PDO 2 mapping for INPUTSs:
Name:GDCat BASICPage 12of 14PRINT"Setting ain PDO transmission type ";pdo_type[0]CAN(can_port,5,rxb,$580+node,8,0)' Receieve for SDOCAN(can_port,5,txb,$600+node,8,1)' Transmit for SDOe=TRUEe=e ANDCAN(-1,9,txb,rxb,32,$1801,1,$0280+node,$8000)' PDO Inactivee=e ANDCAN(-1,9,txb,rxb,32,$1802,1,$0380+node,$8000)' PDO Inactivee=e ANDCAN(-1,9,txb,rxb,8,$1801,2,pdo_type)' Set inputs transmit typee=e ANDCAN(-1,9,txb,rxb,8,$1802,2,pdo_type)' Set inputs transmit typee=e ANDCAN(-1,9,txb,rxb,32,$1801,1,$0280+node,$0000) ' PDO Activee=e ANDCAN(-1,9,txb,rxb,32,$1802,1,$0380+node,$0000) ' PDO Active' defaults are:'  0x1801:2 = 255 ' transmit inputs on event'  0x1802:2 = 255' standard mapping for P326 Tx PDOs'  0x1a01:0 = 4'  0x1a01:1 = 64010110'  0x1a01:2 = 64010210'  0x1a01:3 = 64010310'  0x1a01:4 = 64010410'  0x1a02:0 = 4'  0x1a02:1 = 64010510'  0x1a02:2 = 64010610'  0x1a02:3 = 64010710'  0x1a02:4 = 64010810IFe=TRUETHENPRINT"Ain Tx type set OK"ELSEPRINT"Ain Tx setup failed"ENDIFRETURN'######################################################' Set up the PDO map and types in the remote slave' (suitable for P318 and P319)'######################################################init_dig_node:CAN(can_port,5,rxb,$580+node,8,0)' Receieve for SDOCAN(can_port,5,txb,$600+node,8,1)' Transmit for SDO' Using the standard PDO1 mapping for OUTPUTs:'  0x1401:2 = 255' pre-set Output PDO mapping (rx PDO1):'  0x1601:0 = 2'  0x1601:1 = 6200 0108'  0x1601:2 = 6200 0208'---------------------------------------------
Name:GDCat BASICPage 13of 14' Using the standard PDO1 mapping for INPUTs:' defaults are:'  0x1801:2 = 255 ' transmit inputs on event' standard mapping for P319 Tx PDOs (2 bytes)'  0x1a01:0 = 2'  0x1a01:1 = 6000 0108'  0x1a01:2 = 6000 0208' Change the Input PDO transmission typePRINT"Setting din PDO transmission type ";pdo_type[0]e=TRUEe=e ANDCAN(can_port,9,txb,rxb,8,$1A00,0,0)e=e ANDCAN(can_port,9,txb,rxb,32,$1800,1,$0180+node,$8000)' PDO Inactivee=e ANDCAN(can_port,9,txb,rxb,32,$1A00,1,$0108,$6000)e=e ANDCAN(can_port,9,txb,rxb,32,$1A00,2,$0208,$6000)e=e ANDCAN(can_port,9,txb,rxb,8,$1800,2,pdo_type)'Set transmit input type' Make the PDO Active again:e=e ANDCAN(can_port,9,txb,rxb,32,$1800,1,$0180+node,$0000)e=e ANDCAN(can_port,9,txb,rxb,8,$1A00,0,2)IFe=TRUETHENPRINT"Din Tx type set OK"ELSEPRINT"Din Tx setup failed"ENDIFRETURN'######################################################' Get digital IO node information and display it'######################################################get_node_info:PRINTCHR(10);CHR(13);"Setup for node address ";node[0]CAN(can_port,5,rxb,$580+node,8,0)' Receieve for SDOCAN(can_port,5,txb,$600+node,8,1)' Transmit for SDO' Get the Vendor ID (1018 sub ind 1)' (Trio Motion Technology 734)IFCAN(can_port,8,txb,rxb,$1018,1,100) THENmf_code=VR(101)PRINT"CANopen Device: Manufacturer code:";VR(101)[4,0]' Get the Product Code (1018 sub ind 2)IFCAN(can_port,8,txb,rxb,$1018,2,100) THENproduct_code=VR(101)IFmf_code=734THENPRINT"Trio Motion CAN IO P";product_code[0];" detected"ELSEPRINT"CanOpen device not recognised"STOPENDIFENDIFELSE
Name:GDCat BASICPage 14of 14PRINT"No device detected at node address ";node[0]STOPENDIFRETURN